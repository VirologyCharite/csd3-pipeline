.PHONY: all html tar clean-results
.PHONY: html-civ-dna html-civ-dna-encephalitis
.PHONY: html-civ-rna html-civ-rna-encephalitis
.PHONY: tar-civ-dna tar-civ-dna-encephalitis
.PHONY: tar-civ-dna-large tar-civ-dna-large-encephalitis
.PHONY: tar-civ-rna tar-civ-rna-encephalitis
.PHONY: clean-civ-dna clean-civ-dna-encephalitis
.PHONY: clean-civ-dna-large clean-civ-dna-large-encephalitis
.PHONY: clean-civ-rna clean-civ-rna-encephalitis

DIRS := $(wildcard [DW]_*/pipelines/standard)

# RUNID will be something like 191205
RUNID := $(shell basename $(shell /bin/pwd))

# CIV_DATE *must* match the value of civDate in common.sh
CIV_DATE := 20191204
CIV_DIR := /rds/project/djs200/rds-djs200-acorg/bt/root/share/civ

# The following must match the dnaProteinGenomeDB and rnaProteinGenomeDB
# variables in common.sh
DNA_PROTEIN_GENOME_DB := $(CIV_DIR)/$(CIV_DATE)-dna-protein-genome.db
DNA_LARGE_PROTEIN_GENOME_DB := $(CIV_DIR)/20200106-dna-protein-genome.db
RNA_PROTEIN_GENOME_DB := $(CIV_DIR)/$(CIV_DATE)-rna-protein-genome.db

# For the large DNA database panels.
DNA_LARGE_MIN_PROTEIN_COUNT := 5

# The following must match the taxonomyDB variable in common.sh
TAXONOMY_DB := $(CIV_DIR)/$(CIV_DATE)-taxonomy.db

ENCEPHALITIS_REGEX := "$(shell cat ../csd3-pipeline/encephalitis-regex.txt)"

PREAMBLE_FILE := summary-preamble.html

# The civnb.info user name. We only know about two names since there are
# only two Cambridge accounts (Terry, Barbara) that could be doing this.
UPLOAD_USERID := $(shell test $$USER = tcj25 && echo terry || echo barbara)
UPLOAD_HOST := civnb.info
UPLOAD_DIR := /1GB/diagnostics/tmp
REPO_DIR := /1GB/diagnostics/bih-pipeline
UNTAR_SCRIPT := /1GB/diagnostics/bih-pipeline/bin/untar-results.sh

# It's possible that no virus-civ-dna-encephalitis.png,
# virus-civ-dna-large-encephalitis.png or virus-civ-rna-encephalitis.png is
# created due to no matching encephalitis viruses. So, make variables that
# contains the encephalitis PNG file names only if they exist.
DNA_ENCEPHALITIS_PNG_FILE := $(shell test -f virus-civ-dna-encephalitis.png && echo virus-civ-dna-encephalitis.png)
DNA_LARGE_ENCEPHALITIS_PNG_FILE := $(shell test -f virus-civ-dna-large-encephalitis.png && echo virus-civ-dna-large-encephalitis.png)
RNA_ENCEPHALITIS_PNG_FILE := $(shell test -f virus-civ-rna-encephalitis.png && echo virus-civ-rna-encephalitis.png)

# Similarly, there may be no encephalitis panels.
DNA_ENCEPHALITIS_PANEL_OUT_DIRS := $(wildcard [DW]_*/pipelines/standard/04-panel-civ-dna-encephalitis/out)
DNA_LARGE_ENCEPHALITIS_PANEL_OUT_DIRS := $(wildcard [DW]_*/pipelines/standard/04-panel-civ-dna-large-encephalitis/out)
RNA_ENCEPHALITIS_PANEL_OUT_DIRS := $(wildcard [DW]_*/pipelines/standard/04-panel-civ-rna-encephalitis/out)

# See the 'colors' target at bottom for how I made the following color list.
READ_COUNT_COLORS := --readCountColor "10 \#0173b2" --readCountColor "50 \#de8f05" --readCountColor "100 \#029e73" --readCountColor "500 \#d55e00" --readCountColor "1000 \#cc78bc"

all: html tar upload

preamble:
	summarize-run.py --run $(RUNID) > $(PREAMBLE_FILE)

gitpull:
	cd ../bih-pipeline && git pull

html: gitpull preamble \
    html-civ-dna \
    html-civ-dna-large \
    html-civ-dna-encephalitis \
    html-civ-dna-large-encephalitis \
    html-civ-rna \
    html-civ-rna-encephalitis

tar: tar-civ-dna \
     tar-civ-dna-large \
     tar-civ-dna-encephalitis \
     tar-civ-dna-large-encephalitis \
     tar-civ-rna \
     tar-civ-rna-encephalitis

html-civ-dna:
	find [DW]_* -name summary-proteins | \
        grep 04-panel-civ-dna/ | \
        proteins-to-pathogens-civ.py \
            --html \
            --proteinGenomeDatabase $(DNA_PROTEIN_GENOME_DB) \
            --taxonomyDatabase $(TAXONOMY_DB) \
            --format fastq \
            --preamble $(PREAMBLE_FILE) \
            --preamble "<p>Database: Charit&eacute; custom DNA protein database from the NCBI refseq virus genomes.</p>" \
            --sampleNameRegex '^([DW]_[^/]+_[DR]NA)_' \
            --pathogenType viral \
            --pathogenPanelFilename virus-civ-dna.png \
            --sampleIndexFilename samples-civ-dna.index \
            --pathogenDataDir pathogen-data-civ-dna \
            --bootstrapTreeviewDir .. \
            $(READ_COUNT_COLORS) \
            > index-civ-dna.html

html-civ-dna-large:
	find [DW]_* -name summary-proteins | \
        grep 04-panel-civ-dna-large/ | \
        proteins-to-pathogens-civ.py \
            --html \
            --minProteinCount $(DNA_LARGE_MIN_PROTEIN_COUNT) \
            --proteinGenomeDatabase $(DNA_LARGE_PROTEIN_GENOME_DB) \
            --taxonomyDatabase $(TAXONOMY_DB) \
            --format fastq \
            --preamble $(PREAMBLE_FILE) \
            --preamble "<p>Database: Charit&eacute; custom large DNA protein database from the NCBI refseq virus genomes.</p>" \
            --sampleNameRegex '^([DW]_[^/]+_[DR]NA)_' \
            --pathogenType viral \
            --pathogenPanelFilename virus-civ-dna-large.png \
            --sampleIndexFilename samples-civ-dna-large.index \
            --pathogenDataDir pathogen-data-civ-dna-large \
            --bootstrapTreeviewDir .. \
            $(READ_COUNT_COLORS) \
            > index-civ-dna-large.html

html-civ-rna:
	find [DW]_* -name summary-proteins | \
        grep 04-panel-civ-rna/ | \
        proteins-to-pathogens-civ.py \
            --html \
            --proteinGenomeDatabase $(RNA_PROTEIN_GENOME_DB) \
            --taxonomyDatabase $(TAXONOMY_DB) \
            --format fastq \
            --preamble $(PREAMBLE_FILE) \
            --preamble "<p>Database: Charit&eacute; custom RNA protein database: NCBI refseq virus genomes, sequences from three Chinese papers, and the RdRp protein (or fragment thereof) from OKIAV genomes.</p>" \
            --sampleNameRegex '^([DW]_[^/]+_[DR]NA)_' \
            --pathogenType viral \
            --pathogenPanelFilename virus-civ-rna.png \
            --sampleIndexFilename samples-civ-rna.index \
            --pathogenDataDir pathogen-data-civ-rna \
            --bootstrapTreeviewDir .. \
            $(READ_COUNT_COLORS) \
            > index-civ-rna.html

html-civ-dna-encephalitis:
	find [DW]_* -name summary-proteins | \
        grep 04-panel-civ-dna-encephalitis/ | \
        proteins-to-pathogens-civ.py \
            --html \
            --proteinGenomeDatabase $(DNA_PROTEIN_GENOME_DB) \
            --taxonomyDatabase $(TAXONOMY_DB) \
            --format fastq \
            --preamble $(PREAMBLE_FILE) \
            --preamble "<p>Database: Charit&eacute; custom DNA protein database from the NCBI refseq virus genomes, filtered for encephalitis-causing viruses.</p>" \
            --titleRegex $(ENCEPHALITIS_REGEX) \
            --sampleNameRegex '^([DW]_[^/]+_[DR]NA)_' \
            --pathogenType viral \
            --pathogenPanelFilename $(DNA_ENCEPHALITIS_PNG_FILE) \
            --sampleIndexFilename samples-civ-dna-encephalitis.index \
            --pathogenDataDir pathogen-data-civ-dna-encephalitis \
            --bootstrapTreeviewDir .. \
            $(READ_COUNT_COLORS) \
            > index-civ-dna-encephalitis.html

html-civ-dna-large-encephalitis:
	find [DW]_* -name summary-proteins | \
        grep 04-panel-civ-dna-large-encephalitis/ | \
        proteins-to-pathogens-civ.py \
            --html \
            --minProteinCount $(DNA_LARGE_MIN_PROTEIN_COUNT) \
            --proteinGenomeDatabase $(DNA_LARGE_PROTEIN_GENOME_DB) \
            --taxonomyDatabase $(TAXONOMY_DB) \
            --format fastq \
            --preamble $(PREAMBLE_FILE) \
            --preamble "<p>Database: Charit&eacute; custom large DNA protein database from the NCBI refseq virus genomes, filtered for encephalitis-causing viruses.</p>" \
            --titleRegex $(ENCEPHALITIS_REGEX) \
            --sampleNameRegex '^([DW]_[^/]+_[DR]NA)_' \
            --pathogenType viral \
            --pathogenPanelFilename $(DNA_LARGE_ENCEPHALITIS_PNG_FILE) \
            --sampleIndexFilename samples-civ-dna-large-encephalitis.index \
            --pathogenDataDir pathogen-data-civ-dna-large-encephalitis \
            --bootstrapTreeviewDir .. \
            $(READ_COUNT_COLORS) \
            > index-civ-dna-large-encephalitis.html

html-civ-rna-encephalitis:
	find [DW]_* -name summary-proteins | \
        grep 04-panel-civ-rna-encephalitis/ | \
        proteins-to-pathogens-civ.py \
            --html \
            --proteinGenomeDatabase $(RNA_PROTEIN_GENOME_DB) \
            --taxonomyDatabase $(TAXONOMY_DB) \
            --format fastq \
            --preamble $(PREAMBLE_FILE) \
            --preamble "<p>Database: Charit&eacute; custom RNA protein database: NCBI refseq virus genomes, sequences from three Chinese papers, and the RdRp protein (or fragment thereof) from OKIAV genomes, filtered for encephalitis-causing viruses.</p>" \
            --titleRegex $(ENCEPHALITIS_REGEX) \
            --sampleNameRegex '^([DW]_[^/]+_[DR]NA)_' \
            --pathogenType viral \
            --pathogenPanelFilename $(RNA_ENCEPHALITIS_PNG_FILE) \
            --sampleIndexFilename samples-civ-rna-encephalitis.index \
            --pathogenDataDir pathogen-data-civ-rna-encephalitis \
            --bootstrapTreeviewDir .. \
            $(READ_COUNT_COLORS) \
            > index-civ-rna-encephalitis.html

tar-civ-dna:
	tar cfj results-civ-dna.tar.bz2 \
            [DW]_*/pipelines/standard/04-panel-civ-dna/out \
            index-civ-dna.html \
            virus-civ-dna.png \
            samples-civ-dna.index \
            pathogen-data-civ-dna

tar-civ-dna-large:
	tar cfj results-civ-dna-large.tar.bz2 \
            [DW]_*/pipelines/standard/04-panel-civ-dna-large/out \
            index-civ-dna-large.html \
            virus-civ-dna-large.png \
            samples-civ-dna-large.index \
            pathogen-data-civ-dna-large

tar-civ-rna:
	tar cfj results-civ-rna.tar.bz2 \
            [DW]_*/pipelines/standard/04-panel-civ-rna/out \
            index-civ-rna.html \
            virus-civ-rna.png \
            samples-civ-rna.index \
            pathogen-data-civ-rna

tar-civ-dna-encephalitis:
	tar cfj results-civ-dna-encephalitis.tar.bz2 \
            $(DNA_ENCEPHALITIS_PANEL_OUT_DIRS) \
            index-civ-dna-encephalitis.html \
            $(DNA_ENCEPHALITIS_PNG_FILE) \
            samples-civ-dna-encephalitis.index \
            pathogen-data-civ-dna-encephalitis

tar-civ-dna-large-encephalitis:
	tar cfj results-civ-dna-large-encephalitis.tar.bz2 \
            $(DNA_LARGE_ENCEPHALITIS_PANEL_OUT_DIRS) \
            index-civ-dna-large-encephalitis.html \
            $(DNA_LARGE_ENCEPHALITIS_PNG_FILE) \
            samples-civ-dna-large-encephalitis.index \
            pathogen-data-civ-dna-large-encephalitis

tar-civ-rna-encephalitis:
	tar cfj results-civ-rna-encephalitis.tar.bz2 \
            $(RNA_ENCEPHALITIS_PANEL_OUT_DIRS) \
            index-civ-rna-encephalitis.html \
            $(RNA_ENCEPHALITIS_PNG_FILE) \
            samples-civ-rna-encephalitis.index \
            pathogen-data-civ-rna-encephalitis

upload:
	ssh $(UPLOAD_USERID)@$(UPLOAD_HOST) bash -c "'test -d $(UPLOAD_DIR)/$(RUNID) || mkdir -p $(UPLOAD_DIR)/$(RUNID)'"
	scp results-*.tar.bz2 $(UPLOAD_USERID)@$(UPLOAD_HOST):$(UPLOAD_DIR)/$(RUNID)
	ssh $(UPLOAD_USERID)@$(UPLOAD_HOST) $(UNTAR_SCRIPT) $(RUNID)
	ssh -A $(UPLOAD_USERID)@$(UPLOAD_HOST) bash -c "'cd $(REPO_DIR) && git pull'"

clean-civ-dna:
	rm -fr \
            results-civ-dna.tar.bz2 \
            samples-civ-dna.index \
            pathogen-data-civ-dna \
            virus-civ-dna.png \
            index-civ-dna.html

clean-civ-dna-large:
	rm -fr \
            results-civ-dna-large.tar.bz2 \
            samples-civ-dna-large.index \
            pathogen-data-civ-dna-large \
            virus-civ-dna-large.png \
            index-civ-dna-large.html

clean-civ-rna:
	rm -fr \
            results-civ-rna.tar.bz2 \
            samples-civ-rna.index \
            pathogen-data-civ-rna \
            virus-civ-rna.png \
            index-civ-rna.html

clean-civ-dna-encephalitis:
	rm -fr \
            results-civ-dna-encephalitis.tar.bz2 \
            samples-civ-dna-encephalitis.index \
            pathogen-data-civ-dna-encephalitis \
            $(DNA_ENCEPHALITIS_PNG_FILE) \
            index-civ-dna-encephalitis.html

clean-civ-dna-large-encephalitis:
	rm -fr \
            results-civ-dna-large-encephalitis.tar.bz2 \
            samples-civ-dna-large-encephalitis.index \
            pathogen-data-civ-dna-large-encephalitis \
            $(DNA_LARGE_ENCEPHALITIS_PNG_FILE) \
            index-civ-dna-large-encephalitis.html

clean-civ-rna-encephalitis:
	rm -fr \
            results-civ-rna-encephalitis.tar.bz2 \
            samples-civ-rna-encephalitis.index \
            pathogen-data-civ-rna-encephalitis \
            $(RNA_ENCEPHALITIS_PNG_FILE) \
            index-civ-rna-encephalitis.html

clean-results: clean-civ-dna clean-civ-dna-large clean-civ-dna-encephalitis clean-civ-dna-large-encephalitis clean-civ-rna clean-civ-rna-encephalitis
	rm -f $(PREAMBLE_FILE)

clean-stats:
	@for i in $(DIRS); do cd $$i; make $@; cd ../../..; done

clean-stats-on: clean-stats clean-trim-on
	@for i in $(DIRS); do cd $$i; make $@; cd ../../..; done

clean-trim:
	@for i in $(DIRS); do cd $$i; make $@; cd ../../..; done

clean-trim-on: clean-trim clean-flash-on

clean-flash:
	@for i in $(DIRS); do cd $$i; make $@; cd ../../..; done

clean-flash-on: clean-flash clean-spades-on

clean-spades:
	@for i in $(DIRS); do cd $$i; make $@; cd ../../..; done

clean-spades-on: clean-spades clean-map-on

clean-map:
	@for i in $(DIRS); do cd $$i; make $@; cd ../../..; done

clean-map-on: clean-map clean-dedup-on

clean-dedup:
	@for i in $(DIRS); do cd $$i; make $@; cd ../../..; done

clean-dedup-on: clean-dedup clean-diamond-on

clean-diamond:
	@for i in $(DIRS); do cd $$i; make $@; cd ../../..; done

clean-diamond-on: clean-diamond clean-panel-on

clean-panel:
	@for i in $(DIRS); do cd $$i; make $@; cd ../../..; done

clean-panel-on: clean-panel

run:
	@for i in $(DIRS); do cd $$i; make $@; cd ../../..; done

status:
	@ls -l [DW]_*/pipelines/standard/slurm-pipeline.*

done:
	@-ls -l [DW]_*/pipelines/standard/slurm-pipeline.done 2>/dev/null

error:
	@-ls -l [DW]_*/pipelines/standard/slurm-pipeline.error 2>/dev/null

running:
	@-ls -l [DW]_*/pipelines/standard/slurm-pipeline.running 2>/dev/null

# See https://chrisalbon.com/python/data_visualization/seaborn_color_palettes/
# for some possible color palettes.
colors:
	@python -c 'import seaborn as sns; print(" ".join([f"--readCountColor \"{count} \\{color}\"" for count, color in zip((10, 50, 100, 500, 1000), sns.color_palette("colorblind", 10).as_hex())]))'
